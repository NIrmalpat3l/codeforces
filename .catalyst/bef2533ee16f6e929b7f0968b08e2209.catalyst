{"title":{"en":"C. Move Brackets","ru":"C. Перемещай скобки"},"contestId":"1374","problemIndex":"C","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given a bracket sequence $$$s$$$ of length $$$n$$$, where $$$n$$$ is even (divisible by two). The string $$$s$$$ consists of $$$\\frac{n}{2}$$$ opening brackets '<span class=\"tex-font-style-tt\">(</span>' and $$$\\frac{n}{2}$$$ closing brackets '<span class=\"tex-font-style-tt\">)</span>'.</p><p>In one move, you can choose <span class=\"tex-font-style-bf\">exactly one bracket</span> and move it to the beginning of the string or to the end of the string (i.e. you choose some index $$$i$$$, remove the $$$i$$$-th character of $$$s$$$ and insert it before or after all remaining characters of $$$s$$$).</p><p>Your task is to find the minimum number of moves required to obtain <span class=\"tex-font-style-bf\">regular bracket sequence</span> from $$$s$$$. It can be proved that the answer always exists under the given constraints.</p><p>Recall what the regular bracket sequence is:</p><ul> <li> \"<span class=\"tex-font-style-tt\">()</span>\" is regular bracket sequence; </li><li> if $$$s$$$ is regular bracket sequence then \"<span class=\"tex-font-style-tt\">(</span>\" + $$$s$$$ + \"<span class=\"tex-font-style-tt\">)</span>\" is regular bracket sequence; </li><li> if $$$s$$$ and $$$t$$$ are regular bracket sequences then $$$s$$$ + $$$t$$$ is regular bracket sequence. </li></ul><p>For example, \"<span class=\"tex-font-style-tt\">()()</span>\", \"<span class=\"tex-font-style-tt\">(())()</span>\", \"<span class=\"tex-font-style-tt\">(())</span>\" and \"<span class=\"tex-font-style-tt\">()</span>\" are regular bracket sequences, but \"<span class=\"tex-font-style-tt\">)(</span>\", \"<span class=\"tex-font-style-tt\">()(</span>\" and \"<span class=\"tex-font-style-tt\">)))</span>\" are not.</p><p>You have to answer $$$t$$$ independent test cases.</p>","ru":"<p>Вам задана скобочная последовательность $$$s$$$ длины $$$n$$$, где $$$n$$$ четное (без остатка делится на 2). Строка $$$s$$$ состоит из $$$\\frac{n}{2}$$$ открывающих скобок '<span class=\"tex-font-style-tt\">(</span>' и $$$\\frac{n}{2}$$$ закрывающих скобок '<span class=\"tex-font-style-tt\">)</span>'.</p><p>За один ход вы можете выбрать <span class=\"tex-font-style-bf\">ровно одну скобку</span> и передвинуть ее в начало или в конец строки (т.е. вы можете выбрать некоторый индекс $$$i$$$, удалить $$$i$$$-й символ из $$$s$$$ и вставить его перед или после всех остальных символов в $$$s$$$).</p><p>Ваша задача — найти минимальное количество ходов, необходимое, чтобы получить <span class=\"tex-font-style-bf\">правильную скобочную последовательность</span> из $$$s$$$. Можно доказать, что ответ всегда существует при данных ограничениях.</p><p>Напомним, что такое правильная скобочная последовательность:</p><ul> <li> «<span class=\"tex-font-style-tt\">()</span>» — правильная скобочная последовательность; </li><li> если $$$s$$$ — правильная скобочная последовательность, то «<span class=\"tex-font-style-tt\">(</span>» + $$$s$$$ + «<span class=\"tex-font-style-tt\">)</span>» — правильная скобочная последовательность; </li><li> если $$$s$$$ и $$$t$$$ — правильные скобочные последовательности, то $$$s$$$ + $$$t$$$ — правильная скобочная последовательность. </li></ul><p>Например, «<span class=\"tex-font-style-tt\">()()</span>», «<span class=\"tex-font-style-tt\">(())()</span>», «<span class=\"tex-font-style-tt\">(())</span>» и «<span class=\"tex-font-style-tt\">()</span>» являются правильными скобочными последовательностями, а «<span class=\"tex-font-style-tt\">)(</span>», «<span class=\"tex-font-style-tt\">()(</span>» и «<span class=\"tex-font-style-tt\">)))</span>» — нет.</p><p>Вам нужно ответить на $$$t$$$ независимых наборов тестовых данных.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 2000$$$) — the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of the test case contains one integer $$$n$$$ ($$$2 \\le n \\le 50$$$) — the length of $$$s$$$. It is guaranteed that $$$n$$$ is even. The second line of the test case containg the string $$$s$$$ consisting of $$$\\frac{n}{2}$$$ opening and $$$\\frac{n}{2}$$$ closing brackets.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Первая строка теста содержит одно целое число $$$t$$$ ($$$1 \\le t \\le 2000$$$) — количество наборов тестовых данных. Затем следуют $$$t$$$ наборов тестовых данных.</p><p>Первая строка набора тестовых данных содержит одно целое число $$$n$$$ ($$$2 \\le n \\le 50$$$) — длину $$$s$$$. Гарантируется, что $$$n$$$ четное. Вторая строка набора тестовых данных содержит строку $$$s$$$, состоящую из $$$\\frac{n}{2}$$$ открывающих и $$$\\frac{n}{2}$$$ закрывающих скобок.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, print the answer — the minimum number of moves required to obtain <span class=\"tex-font-style-bf\">regular bracket sequence</span> from $$$s$$$. It can be proved that the answer always exists under the given constraints.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора тестовых данных выведите ответ на него — минимальное количество ходов, необходимое, чтобы получить <span class=\"tex-font-style-bf\">правильную скобочную последовательность</span> из $$$s$$$. Можно доказать, что ответ всегда существует при данных ограничениях.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case of the example, it is sufficient to move the first bracket to the end of the string.</p><p>In the third test case of the example, it is sufficient to move the last bracket to the beginning of the string.</p><p>In the fourth test case of the example, we can choose last three openning brackets, move them to the beginning of the string and obtain \"<span class=\"tex-font-style-tt\">((()))(())</span>\".</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе тестовых данных примера достаточно передвинуть первую скобку в конец строки.</p><p>В третьем наборе тестовых данных примера достаточно передвинуть последнюю скобку в начало строки.</p><p>В четвертом наборе тестовых данных примера мы можем выбрать три последние открывающие скобки, переместить их в начало строки и получить «<span class=\"tex-font-style-tt\">((()))(())</span>».</p>"},"sampleTestcases":[{"id":1681911801561,"input":"4\n2\n)(\n4\n()()\n8\n())()()(\n10\n)))((((())","output":"1\n0\n1\n3\n","result":{"id":1681911801561,"stdout":"1\r\n0\r\n1\r\n3\r\n","stderr":"","exitcode":0,"signal":null,"time":741,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}