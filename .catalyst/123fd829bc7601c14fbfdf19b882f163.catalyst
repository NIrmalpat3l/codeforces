{"title":{"en":"C. Prepend and Append","ru":"C. Приписать и дописать"},"contestId":"1791","problemIndex":"C","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Timur initially had a binary string$$$^{\\dagger}$$$ $$$s$$$ (possibly of length $$$0$$$). He performed the following operation several (possibly zero) times: </p><ul> <li> Add $$$\\texttt{0}$$$ to one end of the string and $$$\\texttt{1}$$$ to the other end of the string. For example, starting from the string $$$\\texttt{1011}$$$, you can obtain either $$$\\color{red}{\\texttt{0}}\\texttt{1011}\\color{red}{\\texttt{1}}$$$ or $$$\\color{red}{\\texttt{1}}\\texttt{1011}\\color{red}{\\texttt{0}}$$$. </li></ul> You are given Timur's final string. What is the length of the <span class=\"tex-font-style-bf\">shortest</span> possible string he could have started with?<p>$$$^{\\dagger}$$$ A binary string is a string (possibly the empty string) whose characters are either $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$.</p>","ru":"<p>Изначально у Тимура есть бинарная строка $$$^{\\dagger}$$$ $$$s$$$ (возможно длины $$$0$$$). Он применил следующую операцию несколько раз (возможно ноль):</p><ul> <li> Приписать $$$\\texttt{0}$$$ к одному из концов строки и $$$\\texttt{1}$$$ к другому концу строки. Например, из строки $$$\\texttt{1011}$$$, мы можем получить или $$$\\color{red}{\\texttt{0}}\\texttt{1011}\\color{red}{\\texttt{1}}$$$, или $$$\\color{red}{\\texttt{1}}\\texttt{1011}\\color{red}{\\texttt{0}}$$$. </li></ul><p>Вам дана строка, которая получилась у Тимура. Какая <span class=\"tex-font-style-bf\">наименьшая</span> возможная длина строки могла быть вначале (до выполнения всех операций)?</p><p>$$$^{\\dagger}$$$ Бинарная строка это строка (возможно пустая), содержащая только символы $$$\\texttt{0}$$$ или $$$\\texttt{1}$$$.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line of the input contains an integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$)&nbsp;— the number of testcases.</p><p>The first line of each test case contains an integer $$$n$$$ ($$$1 \\leq n \\leq 2000$$$)&nbsp;— the length of Timur's final string.</p><p>The second line of each test case contains a string $$$s$$$ of length $$$n$$$ consisting of characters $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$, denoting the final string.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Первая строка содержит целое число $$$t$$$ ($$$1 \\leq t \\leq 100$$$)&nbsp;— количество наборов входных данных.</p><p>Первая строка каждого набора содержит целое число $$$n$$$ ($$$1 \\leq n \\leq 2000$$$)&nbsp;— длину строки Тимура после выполнения всех операций.</p><p>Вторая строка каждого набора содержит строку $$$s$$$ длины $$$n$$$, состоящую из символов $$$\\texttt{0}$$$ или $$$\\texttt{1}$$$, обозначающая финальную строку Тимура.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output a single nonnegative integer&nbsp;— the shortest possible length of Timur's original string. Note that Timur's original string could have been empty, in which case you should output $$$0$$$.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите единственное неотрицательное целое число&nbsp;— наименьшую возможную длину изначальной строки Тимура. Обратите внимание, что изначальная строка Тимура может быть пустой, в этом случае выведите $$$0$$$.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, the shortest possible string Timur started with is $$$\\texttt{0}$$$, and he performed the following operation: $$$\\texttt{0} \\to \\color{red}{\\texttt{1}}\\texttt{0}\\color{red}{\\texttt{0}}$$$.</p><p>In the second test case, the shortest possible string Timur started with is $$$\\texttt{11}$$$, and he performed the following operation: $$$\\texttt{11} \\to \\color{red}{\\texttt{0}}\\texttt{11}\\color{red}{\\texttt{1}}$$$.</p><p>In the third test case, the shortest possible string Timur started with is $$$\\texttt{10101}$$$, and he didn't perform any operations.</p><p>In the fourth test case, the shortest possible string Timur started with is the empty string (which we denote by $$$\\varepsilon$$$), and he performed the following operations: $$$\\varepsilon \\to \\color{red}{\\texttt{1}}\\texttt{}\\color{red}{\\texttt{0}} \\to \\color{red}{\\texttt{0}}\\texttt{10}\\color{red}{\\texttt{1}} \\to \\color{red}{\\texttt{1}}\\texttt{0101}\\color{red}{\\texttt{0}}$$$.</p><p>In the fifth test case, the shortest possible string Timur started with is $$$\\texttt{101}$$$, and he performed the following operations: $$$\\texttt{101} \\to \\color{red}{\\texttt{0}}\\texttt{101}\\color{red}{\\texttt{1}} \\to \\color{red}{\\texttt{1}}\\texttt{01011}\\color{red}{\\texttt{0}}$$$.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе входных данных, кратчайшая изначальная строка Тимура это $$$\\texttt{0}$$$. К ней он применил следующую операцию: $$$\\texttt{0} \\to \\color{red}{\\texttt{1}}\\texttt{0}\\color{red}{\\texttt{0}}$$$.</p><p>Во втором наборе, кратчайшая изначальная строка Тимура это $$$\\texttt{11}$$$. К ней он применил следующую операцию: $$$\\texttt{11} \\to \\color{red}{\\texttt{0}}\\texttt{11}\\color{red}{\\texttt{1}}$$$.</p><p>В третьем наборе, кратчайшая изначальная строка Тимура это $$$\\texttt{10101}$$$ и он не применял к ней никаких операций.</p><p>В четвертом наборе, кратчайшая изначальная строка Тимура это пустая строка (обозначим её как $$$\\varepsilon$$$). К ней он применил следующие операции: $$$\\varepsilon \\to \\color{red}{\\texttt{1}}\\texttt{}\\color{red}{\\texttt{0}} \\to \\color{red}{\\texttt{0}}\\texttt{10}\\color{red}{\\texttt{1}} \\to \\color{red}{\\texttt{1}}\\texttt{0101}\\color{red}{\\texttt{0}}$$$.</p><p>В пятом наборе, кратчайшая изначальная строка Тимура это $$$\\texttt{101}$$$. К ней он применил следующие операции: $$$\\texttt{101} \\to \\color{red}{\\texttt{0}}\\texttt{101}\\color{red}{\\texttt{1}} \\to \\color{red}{\\texttt{1}}\\texttt{01011}\\color{red}{\\texttt{0}}$$$.</p>"},"sampleTestcases":[{"id":1680098016564,"input":"9\n3\n100\n4\n0111\n5\n10101\n6\n101010\n7\n1010110\n1\n1\n2\n10\n2\n11\n10\n1011011010","output":"1\n2\n5\n0\n3\n1\n0\n2\n4\n","result":{"id":1680098016564,"stdout":"1\r\n2\r\n5\r\n0\r\n3\r\n1\r\n0\r\n2\r\n4\r\n","stderr":"","exitcode":0,"signal":null,"time":686,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}