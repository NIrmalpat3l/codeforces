{"title":{"en":"B. Make Product Equal One","ru":"B. Сделайте произведение единицей"},"contestId":"1206","problemIndex":"B","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given $$$n$$$ numbers $$$a_1, a_2, \\dots, a_n$$$. With a cost of one coin you can perform the following operation:</p><p>Choose one of these numbers and add or subtract $$$1$$$ from it.</p><p>In particular, we can apply this operation to the same number several times.</p><p>We want to make the product of all these numbers equal to $$$1$$$, in other words, we want $$$a_1 \\cdot a_2$$$ $$$\\dots$$$ $$$\\cdot a_n = 1$$$. </p><p>For example, for $$$n = 3$$$ and numbers $$$[1, -3, 0]$$$ we can make product equal to $$$1$$$ in $$$3$$$ coins: add $$$1$$$ to second element, add $$$1$$$ to second element again, subtract $$$1$$$ from third element, so that array becomes $$$[1, -1, -1]$$$. And $$$1\\cdot (-1) \\cdot (-1) = 1$$$.</p><p>What is the minimum cost we will have to pay to do that?</p>","ru":"<p>Даны $$$n$$$ целых чисел $$$a_1, a_2, \\dots, a_n$$$. За одну монету можно сделать следующую операцию:</p><p>Выбрать одно из этих чисел, и уменьшить или увеличить его на $$$1$$$.</p><p>В частности, мы можем применять эту операцию к одному и тому же числу несколько раз.</p><p>Мы хотим добиться того, чтобы произведение всех чисел стало равно $$$1$$$, другими словами, чтобы $$$a_1 \\cdot a_2$$$ $$$\\dots$$$ $$$\\cdot a_n = 1$$$. </p><p>К примеру, для $$$n = 3$$$ и чисел $$$[1, -3, 0]$$$ мы можем сделать произведение равным $$$1$$$ за $$$3$$$ монеты: добавить $$$1$$$ к второму элементу, добавить $$$1$$$ к второму элементу еще раз, отнять $$$1$$$ от третьего элемента, в результате чего массив станет равным $$$[1, -1, -1]$$$. А $$$1\\cdot (-1) \\cdot (-1) = 1$$$.</p><p>Какое минимальное количество монет нужно для этого заплатить?</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$)&nbsp;— the number of numbers.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$-10^9 \\le a_i \\le 10^9$$$)&nbsp;— the numbers.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Первая строка содержит одно целое число $$$n$$$ ($$$1 \\le n \\le 10^5$$$)&nbsp;— количество чисел.</p><p>Вторая строка содержит $$$n$$$ целых чисел $$$a_1, a_2, \\dots, a_n$$$ ($$$-10^9 \\le a_i \\le 10^9$$$)&nbsp;— сами числа.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Output a single number&nbsp;— the minimal number of coins you need to pay to make the product equal to $$$1$$$.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Выведите единственное число&nbsp;— минимальное количество монет, которое нужно потратить, чтобы сделать произведение равным $$$1$$$.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first example, you can change $$$1$$$ to $$$-1$$$ or $$$-1$$$ to $$$1$$$ in $$$2$$$ coins.</p><p>In the second example, you have to apply at least $$$4$$$ operations for the product not to be $$$0$$$.</p><p>In the third example, you can change $$$-5$$$ to $$$-1$$$ in $$$4$$$ coins, $$$-3$$$ to $$$-1$$$ in $$$2$$$ coins, $$$5$$$ to $$$1$$$ in $$$4$$$ coins, $$$3$$$ to $$$1$$$ in $$$2$$$ coins, $$$0$$$ to $$$1$$$ in $$$1$$$ coin.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом примере, вы можете изменить $$$1$$$ на $$$-1$$$ или $$$-1$$$ на $$$1$$$ за $$$2$$$ монеты.</p><p>Во втором примере, вы должны применить по крайней мере $$$4$$$ операции, чтобы произведение не было равным $$$0$$$.</p><p>В третьем примере, вы можете изменить $$$-5$$$ на $$$-1$$$ за $$$4$$$ монеты, $$$-3$$$ на $$$-1$$$ за $$$2$$$ монеты, $$$5$$$ на $$$1$$$ за $$$4$$$ монеты, $$$3$$$ на $$$1$$$ за $$$2$$$ монеты, $$$0$$$ на $$$1$$$ за $$$1$$$ монету.</p>"},"sampleTestcases":[{"id":1679103862071,"input":"2\n-1 1","output":"2","result":{"id":1679103862071,"stdout":"2","stderr":"","exitcode":0,"signal":null,"time":587,"timeout":false}},{"id":1679103862072,"input":"4\n0 0 0 0","output":"4","result":{"id":1679103862072,"stdout":"4","stderr":"","exitcode":0,"signal":null,"time":385,"timeout":false}},{"id":1679103862073,"input":"5\n-5 -3 5 3 0","output":"13","result":{"id":1679103862073,"stdout":"13","stderr":"","exitcode":0,"signal":null,"time":388,"timeout":false}},{"id":1679125574040,"input":"20\n459151683 279504854 500320491 715966379 484152147 179708763 -312314917 -468953627 -816236061 -171030930 902332207 -4832598 -28162448 239469235 -142309467 -836437664 -658075191 -748965205 483598661 348267125","output":"8779789633","result":{"id":1679125574040,"stdout":"8779789633","stderr":"","exitcode":0,"signal":null,"time":390,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1206/submit","language":"c++"}